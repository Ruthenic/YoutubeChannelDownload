#!/usr/bin/python
from youtube_api import YoutubeDataApi
import os,json,subprocess,shutil,argparse
import youtube_dl
video_ids = []
parser = argparse.ArgumentParser(description='Interactive tool to download all videos from a specific YouTube channel')
parser.add_argument('-fsl', '--file-size-limit', help='Limit file size of downloaded videos. Example: "-fsl 75M"')
parser.add_argument('-mrl', '--max-resolution', help='Specify a maximum resolution to download in. Example: "-mrl 1080"')
parser.add_argument('-f', '--format', help='The format to save the file(s) in. Example: "-f mp4"')
args = parser.parse_args()
print(args)
dicargs = vars(parser.parse_args()) #haha dic... entertainment
try:
    with open('api_key.txt') as f:
        api_key = f.read() 
except:
    print("API key not found! Exiting...")
yt = YoutubeDataApi(api_key)
if not yt.verify_key():
    print("Invalid API key! Exiting...")
    exit()
if args.file_size_limit is not None:
    hasSetFilesize = True
    filesizelimit = str(args.file_size_limit)
else:
    hasSetFilesize = False
    filesizelimit = None
if args.max_resolution is not None:
    hasSetRes = True
    maxreslimit = str(args.max_resolution)
else:
    hasSetRes = False
    maxreslimit = None
if args.format is not None:
    hasSetFormat = True
    codec = str(args.format)
else:
    hasSetFormat = False
    codec = 'mp4'
channelName = input('What is the name of the channel you want to download? ')
result = yt.search(channelName)[0]
isCorrect = input("Is '" + result.get('channel_title') + "' with video title '" + result.get('video_title') +  "' the correct channel? ")
if isCorrect.lower() == 'false' or isCorrect.lower() == 'no':
    print("Falling back to channel id directly from username!")
    try:
        channelId = yt.get_channel_id_from_user(channelName)
    except:
        print("Failed! Exiting...")
        exit()
elif isCorrect.lower() == 'yes':
    channelId = result.get('channel_id')
channelMetadata = yt.get_channel_metadata(channelId)
rawChannelMetadata = yt.get_channel_metadata(channelId, parser=None)
print(channelMetadata)
os.makedirs(channelId, exist_ok=True)
with open(channelId + '/metadata.json', 'w') as f:
    f.write(json.dumps(rawChannelMetadata, sort_keys=True, indent=4))
uploaded = yt.get_videos_from_playlist_id(channelMetadata.get('playlist_id_uploads'))
for i in uploaded:
    print(i.get('video_id'))
    video_ids.append(i.get('video_id'))
wantsDownloads = input("Would you like to download all YouTube videos on this channel? [Y/N] ")
if wantsDownloads.lower() == 'y':
    ydl_format = codec
    if hasSetFilesize == True:
        ydl_format = ydl_format + '[filesize<=' + filesizelimit + ']'
    if hasSetRes == True:
        ydl_format = ydl_format + '[height<=' + maxreslimit + ']'
    ydl = youtube_dl.YoutubeDL({'outtmpl': channelId + '/%(title)s.%(ext)s', 'format': ydl_format, 'extract-audio': True})
    print(video_ids)
    with ydl:
        ydl.download(video_ids)
